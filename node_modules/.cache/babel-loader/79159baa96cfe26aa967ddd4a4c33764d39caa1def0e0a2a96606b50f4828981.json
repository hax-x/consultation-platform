{"ast":null,"code":"import OpenAI from 'openai';\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\nexport class AIService {\n  async generateResponse(userMessage, context, persona = 'riley') {\n    const systemPrompt = this.getPersonaPrompt(persona, context);\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"system\",\n          content: systemPrompt\n        }, {\n          role: \"user\",\n          content: userMessage\n        }],\n        temperature: 0.7,\n        max_tokens: 500\n      });\n      const aiResponse = response.choices[0].message.content;\n      const insights = this.extractInsights(userMessage, aiResponse);\n      return {\n        response: aiResponse,\n        insights: insights,\n        followUpQuestions: this.generateFollowUp(userMessage, context)\n      };\n    } catch (error) {\n      console.error('AI API Error:', error);\n      return {\n        response: \"I'm having trouble connecting right now. Could you please try rephrasing your response?\",\n        insights: [],\n        followUpQuestions: []\n      };\n    }\n  }\n  getPersonaPrompt(persona, context) {\n    const personas = {\n      riley: `You are Riley, a strategic priority consultant for TAFE NSW.\nYou help identify and prioritise strategic initiatives for the Health, Wellbeing & Human Services faculty.\nBe warm, strategic, and ask thoughtful follow-up questions.\nThe stakeholder is a ${context.role} in ${context.department}.\nUse Australian English and focus on practical, implementable solutions.`,\n      morgan: `You are Morgan, a capacity analysis specialist for TAFE NSW.\nYou help assess current capacity and identify optimization opportunities.\nBe analytical, data-driven, and thorough in your analysis.\nThe stakeholder is a ${context.role} in ${context.department}.`,\n      alex: `You are Alex, a risk assessment specialist for TAFE NSW.\nYou help identify, assess, and mitigate operational and strategic risks.\nBe thorough, systematic, and focus on practical risk management strategies.\nThe stakeholder is a ${context.role} in ${context.department}.`,\n      jordan: `You are Jordan, a stakeholder engagement specialist for TAFE NSW.\nYou help develop comprehensive engagement strategies and communication plans.\nBe collaborative, inclusive, and focus on building strong stakeholder relationships.\nThe stakeholder is a ${context.role} in ${context.department}.`\n    };\n    return personas[persona] || personas.riley;\n  }\n  extractInsights(userMessage, aiResponse) {\n    const insights = [];\n    const message = userMessage.toLowerCase();\n\n    // Simple keyword-based insights\n    if (message.includes('staff') || message.includes('recruitment')) {\n      insights.push({\n        type: 'pattern',\n        message: 'Staffing concerns are commonly reported across departments in the health sector.',\n        confidence: 0.8\n      });\n    }\n    if (message.includes('student') || message.includes('placement')) {\n      insights.push({\n        type: 'opportunity',\n        message: 'Student placement challenges often indicate partnership development opportunities.',\n        confidence: 0.7\n      });\n    }\n    if (message.includes('technology') || message.includes('system')) {\n      insights.push({\n        type: 'trend',\n        message: 'Technology infrastructure is a recurring theme in stakeholder feedback.',\n        confidence: 0.75\n      });\n    }\n    return insights;\n  }\n  generateFollowUp(userMessage, context) {\n    const followUps = [\"Can you tell me more about the specific challenges you're facing?\", \"What would an ideal solution look like from your perspective?\", \"Are there any resource constraints we should consider?\", \"How does this impact your day-to-day operations?\", \"What support would you need to address this effectively?\"];\n    return [followUps[Math.floor(Math.random() * followUps.length)]];\n  }\n}","map":{"version":3,"names":["OpenAI","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","AIService","generateResponse","userMessage","context","persona","systemPrompt","getPersonaPrompt","response","chat","completions","create","model","messages","role","content","temperature","max_tokens","aiResponse","choices","message","insights","extractInsights","followUpQuestions","generateFollowUp","error","console","personas","riley","department","morgan","alex","jordan","toLowerCase","includes","push","type","confidence","followUps","Math","floor","random","length"],"sources":["/home/anas/Downloads/Internship/HWHS/Consultation-Platform/src/services/aiService.js"],"sourcesContent":["import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\nexport class AIService {\n  async generateResponse(userMessage, context, persona = 'riley') {\n    const systemPrompt = this.getPersonaPrompt(persona, context);\n\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          { role: \"system\", content: systemPrompt },\n          { role: \"user\", content: userMessage }\n        ],\n        temperature: 0.7,\n        max_tokens: 500\n      });\n\n      const aiResponse = response.choices[0].message.content;\n      const insights = this.extractInsights(userMessage, aiResponse);\n\n      return {\n        response: aiResponse,\n        insights: insights,\n        followUpQuestions: this.generateFollowUp(userMessage, context)\n      };\n    } catch (error) {\n      console.error('AI API Error:', error);\n      return {\n        response: \"I'm having trouble connecting right now. Could you please try rephrasing your response?\",\n        insights: [],\n        followUpQuestions: []\n      };\n    }\n  }\n\n  getPersonaPrompt(persona, context) {\n    const personas = {\n      riley: `You are Riley, a strategic priority consultant for TAFE NSW.\nYou help identify and prioritise strategic initiatives for the Health, Wellbeing & Human Services faculty.\nBe warm, strategic, and ask thoughtful follow-up questions.\nThe stakeholder is a ${context.role} in ${context.department}.\nUse Australian English and focus on practical, implementable solutions.`,\n\n      morgan: `You are Morgan, a capacity analysis specialist for TAFE NSW.\nYou help assess current capacity and identify optimization opportunities.\nBe analytical, data-driven, and thorough in your analysis.\nThe stakeholder is a ${context.role} in ${context.department}.`,\n\n      alex: `You are Alex, a risk assessment specialist for TAFE NSW.\nYou help identify, assess, and mitigate operational and strategic risks.\nBe thorough, systematic, and focus on practical risk management strategies.\nThe stakeholder is a ${context.role} in ${context.department}.`,\n\n      jordan: `You are Jordan, a stakeholder engagement specialist for TAFE NSW.\nYou help develop comprehensive engagement strategies and communication plans.\nBe collaborative, inclusive, and focus on building strong stakeholder relationships.\nThe stakeholder is a ${context.role} in ${context.department}.`\n    };\n\n    return personas[persona] || personas.riley;\n  }\n\n  extractInsights(userMessage, aiResponse) {\n    const insights = [];\n    const message = userMessage.toLowerCase();\n\n    // Simple keyword-based insights\n    if (message.includes('staff') || message.includes('recruitment')) {\n      insights.push({\n        type: 'pattern',\n        message: 'Staffing concerns are commonly reported across departments in the health sector.',\n        confidence: 0.8\n      });\n    }\n\n    if (message.includes('student') || message.includes('placement')) {\n      insights.push({\n        type: 'opportunity',\n        message: 'Student placement challenges often indicate partnership development opportunities.',\n        confidence: 0.7\n      });\n    }\n\n    if (message.includes('technology') || message.includes('system')) {\n      insights.push({\n        type: 'trend',\n        message: 'Technology infrastructure is a recurring theme in stakeholder feedback.',\n        confidence: 0.75\n      });\n    }\n\n    return insights;\n  }\n\n  generateFollowUp(userMessage, context) {\n    const followUps = [\n      \"Can you tell me more about the specific challenges you're facing?\",\n      \"What would an ideal solution look like from your perspective?\",\n      \"Are there any resource constraints we should consider?\",\n      \"How does this impact your day-to-day operations?\",\n      \"What support would you need to address this effectively?\"\n    ];\n\n    return [followUps[Math.floor(Math.random() * followUps.length)]];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}